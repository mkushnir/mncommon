#!/bin/sh

# On FreeBSD:
#   pkg install autotools
#
# On Linux:
#   apt-get update
#   apt-get install autotools-dev autoconf libtool
#   or apt-get install build-essential
#
#   yum install epel-release
#   yum group install "Development Tools"
#   yum install openssl-devel zlib-devel libev-devel
#
# Git setup:
#   git init
#   git add \
#     .gitignore \
#     AUTHORS \
#     COPYING \
#     ChangeLog \
#     Makefile.am \
#     NEWS \
#     README \
#     configure.ac \
#     man/Makefile.am \
#     setup-env \
#     src/${pname}.c \
#     src/${pname}.h \
#     src/${pname}_private.h \
#     src/Makefile.am \
#     src/diag.txt \
#     test/Makefile.am \
#     test/diag.txt \
#     test/gendata.c \
#     test/runscripts \
#     test/testbar.c \
#     test/testfoo.c \
#     test/unittest.h

_run() {
    echo "running $@ ..."
    eval "$@" >/dev/null 2>&1
}

die() {
    echo $*
    exit 1
}


do_init() {
    _run autoreconf --force
    if test $? -ne 0
    then
        if test -e .ac-aux/missing
        then
            die fix your errors
        fi
    fi
    _run aclocal
    _run autoheader
    _run autoreconf
    _run automake --add-missing --force-missing
    _run libtoolize
    _run make distclean
    _run autoreconf
    ./configure --prefix=$HOME --enable-debug
}

do_dev() {
    autoreconf --force
    ./configure --prefix=$HOME --enable-debug
}

do_dev_static() {
    autoreconf --force
    ./configure --prefix=$HOME --enable-debug --enable-allstatic
}

do_dev_ndebug() {
    autoreconf --force
    ./configure --prefix=$HOME
}

do_dev_ndebug_static() {
    autoreconf --force
    ./configure --prefix=$HOME --enable-allstatic --enable-lto
}


uname_s=`uname -s`

sha256_cmd=/sbin/sha256
if test "$uname_s" = "Linux"
then
    linux_exclusions='--enable-conf=no'
    sha256_cmd=/usr/bin/sha256sum
elif test "$uname_s" = "Darwin"
then
    linux_exclusions='--enable-memdebug=no'
fi


dirs="."
R=`pwd -P`



LDFLAGS=
for i in $dirs
do
    LDFLAGS="$LDFLAGS -L${R}/$i/src/.libs"
done
LDFLAGS="$LDFLAGS -L$HOME/lib -L/usr/local/lib"
export LDFLAGS

CFLAGS=
for i in $dirs
do
    CFLAGS="$CFLAGS -I${R}/$i/src"
done
CFLAGS="$CFLAGS -I$HOME/include -I/usr/local/include"
export CFLAGS

if test "$1" = "init"
then
    for i in $dirs
    do
        ( cd $i && do_init )
    done

elif test "$1" = "dev"
then
    for i in $dirs
    do
        ( cd $i && do_dev )
    done

elif test "$1" = "dev-static"
then
    for i in $dirs
    do
        ( cd $i && do_dev_static )
    done

elif test "$1" = "dev-ndebug"
then
    for i in $dirs
    do
        ( cd $i && do_dev_ndebug )
    done

elif test "$1" = "dev-ndebug-static"
then
    for i in $dirs
    do
        ( cd $i && do_dev_ndebug_static )
    done

elif test "$1" = "dist"
then
    unset LDFLAGS
    unset CFLAGS
    autoreconf --force
    ./configure --enable-profile=no $linux_exclusions $MN_CONFIGURE_ARGS
    make dist
    if test -f port/distinfo
    then
        truncate -s0 port/distinfo
    fi
    if test -d /data0/mkushnir/distfiles
    then
        for i in *.tar.gz
        do
            cp -v $i /data0/mkushnir/distfiles/
            if test -f port/distinfo
            then
                $sha256_cmd $i >port/distinfo
                echo "SIZE ($i) = `stat -f%z $i`" >>port/distinfo
            fi
        done
    fi

elif test "$1" = "du"
then
    find . -type f -name '*.[ch]' -ls | awk '{print $7;}' | (n=0; while read a; do n=$((n + a)); done; echo $n)

else
    echo "`basename $0` {init|dev|dist|dev-ndebug|dev-memdebug|du}"
fi
